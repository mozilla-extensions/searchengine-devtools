[
  {
    "namespace": "experiments.searchengines",
    "description": "Search Engines",
    "types": [
      {
        "id": "EngineUrl",
        "type": "object",
        "properties": {
          "base": {
            "title": "Base",
            "description": "The PrePath and FilePath of the URL. May include variables for engines which have a variable FilePath, e.g. {searchTerm} for when a search term is within the path of the url.",
            "type": "string"
          },
          "method": {
            "title": "Method",
            "description": "The HTTP method to use to send the request. If not specified, defaults to GET.",
            "type": "string",
            "pattern": "^(GET|POST)$",
            "enum": ["GET", "POST"],
            "optional": true
          },
          "params": {
            "title": "Parameters",
            "description": "The parameters for this URL.",
            "type": "array",
            "optional": true,
            "items": {
              "type": "object",
              "title": "Parameter",
              "properties": {
                "name": {
                  "title": "Name",
                  "description": "The parameter name",
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9-_]*$"
                },
                "value": {
                  "title": "Value",
                  "description": "The parameter value, this may be a static value, or additionally contain a parameter replacement, e.g. {inputEncoding}. For the partner code parameter, this field should be {partnerCode}.",
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9-_{}]*$",
                  "optional": true
                },
                "experimentConfig": {
                  "title": "Experiment Configuration",
                  "description": "The value for the parameter will be derived from the equivalent experiment configuration value. If not experiment is present, this parameter will not be included in the final url.",
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9-_]*$",
                  "optional": true
                },
                "searchAccessPoint": {
                  "title": "Search Access Point",
                  "description": "A parameter whose value depends on the access point where the search was initiated.",
                  "type": "object",
                  "optional": true,
                  "properties": {
                    "searchbar": {
                      "title": "Name",
                      "description": "The value for the parameter when searched from the search bar.",
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]*$"
                    },
                    "addressbar": {
                      "title": "Name",
                      "description": "The value for the parameter when searched from the address bar.",
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]*$"
                    },
                    "contextmenu": {
                      "title": "Name",
                      "description": "The value for the parameter when searched from the context menu.",
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]*$"
                    },
                    "homepage": {
                      "title": "Name",
                      "description": "The value for the parameter when searched from the homepage.",
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]*$"
                    },
                    "newtab": {
                      "title": "Name",
                      "description": "The value for the parameter when searched from the new tab page.",
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]*$"
                    }
                  }
                }
              }
            }
          },
          "searchTermParamName": {
            "title": "Search Term Parameter Name",
            "description": "The name of the query parameter for the search term. Automatically appended to the end of the query. This may be skipped if `{searchTerm}` is included in the base.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9-_]*$",
            "optional": true
          }
        }
      }
    ],
    "functions": [
      {
        "name": "getCurrentLocale",
        "type": "function",
        "description": "Return currently configured locale",
        "async": true,
        "parameters": []
      },
      {
        "name": "getRegions",
        "type": "function",
        "description": "Return a list of regions firefox is aware of",
        "async": true,
        "parameters": []
      },
      {
        "name": "getCurrentRegion",
        "type": "function",
        "description": "Return currently configured region",
        "async": true,
        "parameters": []
      },
      {
        "name": "getCurrentConfigFormat",
        "type": "function",
        "description": "Returns the current configuration format",
        "async": true,
        "parameters": []
      },
      {
        "name": "getEngines",
        "type": "function",
        "description": "Return the sorted engine configuration for the given region, locale and configuration",
        "async": true,
        "parameters": [
          {
            "type": "object",
            "name": "getEnginesProperties",
            "properties": {
              "configData": {
                "type": "string",
                "description": "The configuration to use (a JSON string)"
              },
              "configOverridesData": {
                "type": "string",
                "description": "The configuration overrides to use (a JSON string)"
              },
              "locale": {
                "type": "string",
                "description": "The users locale"
              },
              "region": {
                "type": "string",
                "description": "The users region"
              },
              "distroID": {
                "type": "string",
                "description": "The user's distribution"
              },
              "experiment": {
                "type": "string",
                "description": "The user's experiment id"
              },
              "appName": {
                "type": "string",
                "description": "The application's name"
              }
            }
          }
        ]
      },
      {
        "name": "jexlFilterMatches",
        "type": "function",
        "description": "Returns true if the filter matches the given parameters",
        "async": true,
        "parameters": [
          {
            "name": "filterExpression",
            "type": "string",
            "description": "The filter expression to check"
          },
          {
            "name": "applicationId",
            "type": "string",
            "description": "The application id to match against"
          },
          {
            "name": "applicationVersion",
            "type": "string",
            "description": "The application version to match against"
          }
        ]
      }
    ],
    "events": []
  }
]
